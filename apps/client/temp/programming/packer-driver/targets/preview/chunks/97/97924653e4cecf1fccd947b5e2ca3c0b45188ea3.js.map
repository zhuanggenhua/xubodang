{"version":3,"sources":["file:///C:/Users/Admin/Desktop/zgh-temp/test/gtest/ctest/xubodang/apps/client/assets/scripts/particle/LightParticle.ts"],"names":["LightParticle","Color","tween","Particle","getRandomNumber","mapH","mapW","constructor","color2","alpha","flickerDuration","flickerTimer","flickerSpeed","flickerTween","flickerTween2","angle","va","curve","borthX","size","y","console","log","x","speedY","Math","random","color","delay","to","a","easing","union","repeatForever","start","update","dt","move","diffX","sin","PI","draw","graphics","fillColor","rect","fill","destroyed","markedForDeletion","stop"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, Graphics, instantiate, Node, Prefab, SpriteFrame, tween, Tween, Vec3 } from 'cc'\r\nimport Particle from './Particle'\r\nimport { getRandomNumber } from '../utils/tool'\r\nimport { mapH, mapW } from '../global/DataManager'\r\n\r\n// 光辉背景\r\nexport class LightParticle extends Particle {\r\n  color2: Color\r\n  alpha: number\r\n  flickerDuration: number\r\n  flickerTimer: number\r\n  flickerSpeed: number\r\n  flickerTween: Tween<unknown>\r\n  flickerTween2: Tween<unknown>\r\n  angle: number\r\n  va: number\r\n  curve: number\r\n  borthX: number\r\n  constructor() {\r\n    super()\r\n    this.size = getRandomNumber(5, 7)\r\n    // 粒子在宽度上散布\r\n    this.borthX = getRandomNumber(0, mapW)\r\n    this.y = this.y\r\n    console.log('??', this.x)\r\n\r\n    this.speedY = Math.random() * 20 + 40 //1-3  --这是向上的\r\n\r\n    // 移动方式：基于sin\r\n    this.angle = 0\r\n    // 速度\r\n    this.va = Math.random() * 10 + 20 // 2 ~ 4\r\n\r\n    // 上下浮动范围的随机值  0.2 -- 0.3  --> 0.1 ~ 0.45\r\n    this.curve = Math.random() * 0.4\r\n\r\n    // this.color = new Color(255, 242, 0, 200) // 金色\r\n    this.color = new Color(255, 250, 101, 200) // 中金色\r\n    // 背景光环\r\n    this.color2 = new Color(255, 247, 153, 100) // 淡金色\r\n\r\n    // 创建一个循环的 tween 来改变 alpha 值，包含闪烁完成后的延时\r\n    const delay = Math.random() * 0.5 + 1\r\n    this.flickerTween = tween(this.color)\r\n      .to(0.5, { a: 0 }, { easing: 'sineInOut' })\r\n      .to(0.5, { a: 200 }, { easing: 'sineInOut' })\r\n      .delay(delay) // 闪烁完成后，延时1秒\r\n      // 确保to按顺序执行\r\n      .union()\r\n      .repeatForever()\r\n      .start()\r\n    this.flickerTween2 = tween(this.color2)\r\n      .to(0.5, { a: 0 }, { easing: 'sineInOut' })\r\n      .to(0.5, { a: 100 }, { easing: 'sineInOut' })\r\n      .delay(delay) // 闪烁完成后，延时1秒\r\n      // 确保to按顺序执行\r\n      .union()\r\n      .repeatForever()\r\n      .start()\r\n  }\r\n  update(dt) {\r\n    super.update(dt)\r\n  }\r\n  move(dt) {\r\n    // 粒子的移动\r\n    this.y += this.speedY * dt\r\n\r\n    this.angle += this.va * dt\r\n    // 基于sin函数图像的移动方式\r\n    const diffX = Math.sin((this.angle * Math.PI) / 180) * mapW * this.curve * 0.5\r\n    this.x = this.borthX + diffX\r\n    console.log('???', diffX)\r\n  }\r\n  draw(graphics: Graphics) {\r\n    graphics.fillColor = this.color2\r\n    graphics.rect(this.x + 2, this.y + 2, this.size, this.size)\r\n    graphics.fill()\r\n    graphics.fillColor = this.color\r\n    graphics.rect(this.x, this.y, this.size, this.size)\r\n    graphics.fill()\r\n  }\r\n  destroyed() {\r\n    if (this.y > mapH) {\r\n      this.markedForDeletion = true\r\n      this.flickerTween.stop() // 在对象被销毁时，停止并清理 tween\r\n    }\r\n  }\r\n}\r\n"]}