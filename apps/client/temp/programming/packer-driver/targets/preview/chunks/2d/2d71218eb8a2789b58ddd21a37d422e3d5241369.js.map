{"version":3,"sources":["file:///C:/Users/Admin/Desktop/zgh-temp/test/gtest/ctest/xubodang/apps/client/assets/scripts/global/DataManager.ts"],"names":["DataManager","Prefab","SpriteFrame","director","view","Singleton","PrefabPathEnum","SkillPathEnum","TexturePathEnum","ResourceManager","getSkillPath","PLAYER_SPEED","BULLET_SPEED","WEAPON_DAMAGE","PLAYER_RADIUS","BULLET_RADIUS","mapW","getVisibleSize","width","mapH","height","mode","setting","player","nickname","roomInfo","life","stage","getScene","getChildByName","prefabMap","Map","textureMap","skillMap","Instance","GetInstance","loadRes","list","p","type","then","prefab","set","push","loadDir","spriteFrames","spriteFrame","Promise","all"],"mappings":"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","sourcesContent":["import { Prefab, SpriteFrame, Node, director, view } from 'cc'\r\nimport { IPlayer, IRoom } from '../common'\r\nimport { Singleton } from '../common/base'\r\nimport Particle from '../particle/Particle'\r\nimport { PrefabPathEnum, SkillPathEnum, TexturePathEnum } from '../enum'\r\nimport { ResourceManager } from './ResourceManager'\r\nimport { getSkillPath } from '../utils'\r\n\r\nconst PLAYER_SPEED = 100\r\nconst BULLET_SPEED = 600\r\n\r\nconst WEAPON_DAMAGE = 5\r\n\r\nconst PLAYER_RADIUS = 50\r\nconst BULLET_RADIUS = 10\r\n\r\n// 设计图尺寸\r\nexport const mapW = view.getVisibleSize().width\r\nexport const mapH = view.getVisibleSize().height\r\n// export const mapW = 720;\r\n// export const mapH = 1280;\r\n\r\nexport default class DataManager extends Singleton {\r\n  static get Instance() {\r\n    return super.GetInstance<DataManager>()\r\n  }\r\n\r\n  mode: 'single' | 'network' | 'teach' = 'single'\r\n\r\n  setting: any = null\r\n\r\n  player: IPlayer = {\r\n    nickname: '游客',\r\n  }\r\n  roomInfo: IRoom = {\r\n    life: 5,\r\n  }\r\n\r\n  stage: Node = director.getScene().getChildByName('Canvas')\r\n\r\n  // actorMap: Map<number, ActorManager> = new Map();\r\n  prefabMap: Map<string, Prefab> = new Map()\r\n  textureMap: Map<string, SpriteFrame[]> = new Map()\r\n  skillMap: Map<SkillPathEnum, SpriteFrame> = new Map()\r\n  // bulletMap: Map<number, BulletManager> = new Map();\r\n\r\n  // state: IState = {\r\n  //   seed: 1, //伪随机种子\r\n  // };\r\n\r\n  // 执行动作\r\n  // applyInput(input: IClientInput) {\r\n\r\n  // }\r\n\r\n  async loadRes() {\r\n    const list = []\r\n    // 注意取得时候不能用枚举，懒得改了\r\n    for (const type in PrefabPathEnum) {\r\n      const p = ResourceManager.Instance.loadRes(PrefabPathEnum[type], Prefab).then((prefab) => {\r\n        DataManager.Instance.prefabMap.set(type, prefab)\r\n      })\r\n      list.push(p)\r\n    }\r\n    for (const type in TexturePathEnum) {\r\n      const p = ResourceManager.Instance.loadDir(TexturePathEnum[type], SpriteFrame).then((spriteFrames) => {\r\n        DataManager.Instance.textureMap.set(type, spriteFrames)\r\n      })\r\n      list.push(p)\r\n    }\r\n\r\n    for (const type in SkillPathEnum) {\r\n      const p = ResourceManager.Instance.loadRes(getSkillPath(SkillPathEnum[type]), SpriteFrame).then((spriteFrame) => {\r\n        DataManager.Instance.skillMap.set(SkillPathEnum[type], spriteFrame)\r\n      })\r\n      list.push(p)\r\n    }\r\n    await Promise.all(list)\r\n  }\r\n}\r\n"]}