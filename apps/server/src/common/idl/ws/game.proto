syntax = "proto3";

package game;


message IPlayer {
  string id = 1;
  string nickname = 2;
  string godname = 3;
  int32 rid = 4;
}
// 登录注册
message LoginReq {
  IPlayer player = 1;
}
message LoginRes {
  optional int32 state = 1;
}
message SignInReq {
}
message SignInRes {
  IPlayer player = 1;
}


// 房间列表
message IRoom {
  int32 id = 1;
  string roomName = 2;
  int32 life = 3;
  string mode = 4;
  bool hasPwd = 6;
  string pwd = 7;
  repeated IPlayer players = 5;
}
message RoomList {  
  repeated IRoom rooms = 1;
}
message RoomCreateReq {
  string roomName = 1;
  string pwd = 2;
  int32 life = 3;
  string mode = 4;
}
message RoomCreateRes {
  IRoom room = 1;
}

// 进入游戏
message EnterGameReq {
  string token = 1;
}

message EnterGameRes {
  EnterGameResData data = 1;
  //optional: 该字段可以没有 
  optional string error = 2;
}

message EnterGameResData {
  string account = 1;
}

// 获取当前玩家的角色列表
message ListActorReq {

}

message ListActorRes {
  ListActorResData data = 1;
  optional string error = 2;
}

message ListActorResData{
  //repeated 可重复字段，相当于数组
  repeated IActor actors = 1;
}

// 创建角色
message CreateActorReq{
  string nickname = 1;
}

message CreateActorRes{
  CreateActorResData data = 1;
  optional string error = 2;
}

message CreateActorResData{

}

// 进入场景
message EnterSceneReq {
  int32 actorId = 1;
}

message EnterSceneRes {
  EnterSceneResData data = 1;
  optional string error = 2;
}

message EnterSceneResData {
  int32 sceneId = 1;
}

// 切换场景
message ChangeSceneReq {
  int32 sceneId = 1;
}

message ChangeSceneRes {
  ChangeSceneResData data = 1;
  optional string error = 2;
}

message ChangeSceneResData {
}

// 创建副本
message CreateReplicationReq {
  int32 replicationType = 1;
}

message CreateReplicationRes {
  CreateReplicationResData data = 1;
  optional string error = 2;
}

message CreateReplicationResData{
}

// 离开副本
message LeaveReplicationReq {

}

message LeaveReplicationRes {
  LeaveReplicationReqData data = 1;
  optional string error = 2;
}

message LeaveReplicationReqData {
  int32 sceneId = 1;
}

message IActor{
  int32 id = 1;
  string nickname = 2;
  float posX = 3;
  float posY = 4;
  int32 type = 5;
  string account = 6;
  int32 sceneId = 7;
}

// 客户端操作同步
message InputFromClient {
  int32 id = 1;
  float directionX = 2;
  float directionY = 3;
  float dt = 4;
}

message State {
  repeated IActor actors = 1;
}

// 服务端状态同步
message StateFromServer {
  State state = 1;
  repeated InputFromClient input = 2;
}
